{"version":3,"sources":["components/PageNavLink/PageNavLInk.tsx","components/NavBar/NavBar.tsx","App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/TabItem/TabItem.tsx","components/Tabs/Tabs.tsx","pages/TabsPage.tsx","index.tsx"],"names":["PageNavLink","React","memo","to","linkTitle","className","isActive","classNames","NavBar","App","HomePage","NotFoundPage","TabItem","tab","tabId","useParams","id","title","Tabs","tabs","selectedTab","find","map","content","TabsPage","ReactDOM","render","path","element","index","replace","document","getElementById"],"mappings":"gQASaA,EAA+BC,IAAMC,MAChD,YAAwB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,UACL,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cAAe,CAAE,YAAaD,KAHlC,SAMGF,OCfII,EAAmBP,IAAMC,MAAK,WACzC,OACE,qBACE,UAAQ,MACRG,UAAU,oDAFZ,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAACL,EAAD,CAAaG,GAAG,IAAIC,UAAU,SAC9B,cAACJ,EAAD,CAAaG,GAAG,QAAQC,UAAU,mBCN/BK,EAAM,kBACjB,qCACE,cAACD,EAAD,IAEA,qBAAKH,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,YCVKK,EAAqBT,IAAMC,MAAK,WAC3C,OACE,oBAAIG,UAAU,QAAd,0BCFSM,EAAyBV,IAAMC,MAAK,WAC/C,OACE,oBAAIG,UAAU,QAAd,+BCKSO,EAA2BX,IAAMC,MAAK,YAAc,IAAXW,EAAU,EAAVA,IAC5CC,EAAUC,cAAVD,MAER,OACE,oBACE,UAAQ,MACRT,UAAWE,IAAW,CAAE,YAAaO,IAAUD,EAAIG,KAFrD,SAIE,cAAC,IAAD,CAAMb,GAAE,aAAQU,EAAIG,IAApB,SACGH,EAAII,aCTAC,EAAwBjB,IAAMC,MAAK,YAAe,IAAZiB,EAAW,EAAXA,KACzCL,EAAUC,cAAVD,MACFM,EAAcD,EAAKE,MAAK,SAAAR,GAAG,OAAIA,EAAIG,KAAOF,KAEhD,OACE,qCACE,qBAAKT,UAAU,gBAAf,SACE,6BACGc,EAAKG,KAAI,SAAAT,GAAG,OACX,cAACD,EAAD,CAASC,IAAKA,WAKpB,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,SACGe,EACGA,EAAYG,QACZ,8BCvBNJ,EAAO,CACX,CAAEH,GAAI,QAASC,MAAO,QAASM,QAAS,eACxC,CAAEP,GAAI,QAASC,MAAO,QAASM,QAAS,eACxC,CAAEP,GAAI,QAASC,MAAO,QAASM,QAAS,gBAG7BC,EAAqBvB,IAAMC,MAAK,WAC3C,OACE,qCACE,oBAAIG,UAAU,QAAd,uBAEA,cAACa,EAAD,CAAMC,KAAMA,UCFlBM,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAACJ,EAAD,MACtB,cAAC,IAAD,CAAOG,KAAK,SAASC,QAAS,cAACJ,EAAD,SAGhC,cAAC,IAAD,CAAOK,OAAK,EAACD,QAAS,cAAClB,EAAD,MACtB,cAAC,IAAD,CAAOiB,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUzB,GAAG,IAAI2B,SAAO,MACrD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAACjB,EAAD,aAI/BoB,SAASC,eAAe,W","file":"static/js/main.7bea05e1.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  linkTitle: string;\n};\n\nexport const PageNavLink: React.FC<Props> = React.memo(\n  ({ to, linkTitle }) => {\n    return (\n      <NavLink\n        to={to}\n        className={({ isActive }) => classNames(\n          'navbar-item', { 'is-active': isActive },\n        )}\n      >\n        {linkTitle}\n      </NavLink>\n    );\n  },\n);\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink/PageNavLInk';\n\nexport const NavBar: React.FC = React.memo(() => {\n  return (\n    <nav\n      data-cy=\"Nav\"\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" linkTitle=\"Home\" />\n          <PageNavLink to=\"/tabs\" linkTitle=\"Tabs\" />\n        </div>\n      </div>\n    </nav>\n  );\n});\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { NavBar } from './components/NavBar/NavBar';\n\nexport const App = () => (\n  <>\n    <NavBar />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = React.memo(() => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n});\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = React.memo(() => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n});\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tab: Tab\n};\n\nexport const TabItem: React.FC<Props> = React.memo(({ tab }) => {\n  const { tabId } = useParams();\n\n  return (\n    <li\n      data-cy=\"Tab\"\n      className={classNames({ 'is-active': tabId === tab.id })}\n    >\n      <Link to={`../${tab.id}`}>\n        {tab.title}\n      </Link>\n    </li>\n  );\n});\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\nimport { TabItem } from '../TabItem/TabItem';\n\ntype Props = {\n  tabs: Tab[]\n};\n\nexport const Tabs: React.FC<Props> = React.memo(({ tabs }) => {\n  const { tabId } = useParams();\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <TabItem tab={tab} />\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab\n          ? selectedTab.content\n          : 'Please select a tab'}\n      </div>\n    </>\n  );\n});\n","import React from 'react';\nimport { Tabs } from '../components/Tabs/Tabs';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: React.FC = React.memo(() => {\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <Tabs tabs={tabs} />\n    </>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { TabsPage } from './pages/TabsPage';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"tabs\">\n          <Route index element={<TabsPage />} />\n          <Route path=\":tabId\" element={<TabsPage />} />\n        </Route>\n\n        <Route index element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}